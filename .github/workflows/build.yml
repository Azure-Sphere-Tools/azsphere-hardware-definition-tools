# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build and Test

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  VS_EXTENSION_SOLUTION_DIR: visualstudio-extension

jobs:
  build-vscode:
    runs-on: ${{ matrix.os }}

    strategy:
      max-parallel: 3
      matrix:
        os: [windows-latest, ubuntu-latest]
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm ci
      - name: Start xvfb only if it's Linux
        if: startsWith(matrix.os,'ubuntu')
        run: |
          /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          echo ">>> Started xvfb"
        shell: bash
      - run: npm run build --if-present
      - run: npm test
        env:
          DISPLAY: ":99.0" # Only necessary for linux tests

  build-visualstudio:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install language server dependencies
        run: npm ci
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1
        with: 
          vs-version: '[16.0, ]'
      - name: Install Visual Studio extension dependencies
        working-directory: ${{env.GITHUB_WORKSPACE}}/${{env.VS_EXTENSION_SOLUTION_DIR}}
        run: nuget restore .
        shell: powershell
      - name: Build
        working-directory: ${{env.GITHUB_WORKSPACE}}/${{env.VS_EXTENSION_SOLUTION_DIR}}
        run: msbuild . /p:configuration=Release /nowarn:MSB3277
        shell: powershell
      - name: Test
        working-directory: ${{env.GITHUB_WORKSPACE}}/${{env.VS_EXTENSION_SOLUTION_DIR}}
        run: msbuild ./AZSphereHardwareDefinitionTools.Tests /t:Test /p:configuration=Release /nowarn:MSB3277
        shell: powershell
