name: Publish

on:
  workflow_run:
    workflows: [ "Build and Test" ]
    branches: [ master ]
    types: [ completed ]
  workflow_dispatch:

env:
  NODE_VERSION: "14.x"
  VS_EXTENSION_SOLUTION_DIR: visualstudio-extension

jobs:
  publish-vscode:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }} || ${{ github.event_name == 'workflow_dispatch' }}
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install dependencies (step 1/3)
        run: npm ci
      - name: Install dependencies (step 2/3)
        run: npm install -g vsce
      - name: Install dependencies (step 3/3)
        run: sudo apt -y install jq
      - name: Fill in extension description
        run: cat vscode-extension/VSCODE_EXTENSION.md > vscode-extension/README.md
      - name: Pack extension
        run: (cd vscode-extension; vsce package)
      - name: Publish to Visual Studio Marketplace
        run: npm run publish
        env:
          EXTENSION_PATH: "./vscode-extension"
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
      - name: Set github release tag
        run: echo "RELEASE_TAG=$(cat vscode-extension/package.json | jq -r '.version')" >> $GITHUB_ENV
      - uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "vscode-extension/*.vsix"
          bodyFile: "README.md"
          tag: ${{ env.RELEASE_TAG }}
          commit: ${{ env.GITHUB_SHA }}
          token: ${{ secrets.GITHUB_TOKEN }}

  publish-visualstudio:
    runs-on: windows-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }} || ${{ github.event_name == 'workflow_dispatch' }}
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install language server dependencies
        run: npm ci
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1
        with:
          vs-version: "[16.0, ]"
      - name: Install Visual Studio extension dependencies
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: nuget restore ./${{env.VS_EXTENSION_SOLUTION_DIR}}
        shell: powershell
      - name: Build
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: msbuild ./${{env.VS_EXTENSION_SOLUTION_DIR}} /p:configuration=Release /nowarn:MSB3277
        shell: powershell
      - name: Rename vsix package
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: mv ${{env.VS_EXTENSION_SOLUTION_DIR}}/AZSphereHardwareDefinitionTools/bin/Release/AZSphereHardwareDefinitionTools.vsix VisualStudio-AZSphereHardwareDefinitionTools.vsix 
      - uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "VisualStudio-AZSphereHardwareDefinitionTools.vsix"
          bodyFile: "README.md"
          tag: "1.0.0"
          commit: ${{ env.GITHUB_SHA }}
          token: ${{ secrets.GITHUB_TOKEN }}
